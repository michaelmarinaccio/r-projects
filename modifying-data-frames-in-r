#------------------------adding a column------------------------

#You can add a new column to the data frame using the mutate() function. mutate() takes a name-value pair as an argument. 
#The name will be the name of the new column you are adding, and the value is an expression defining the values of the new column in terms of the existing columns. 
#mutate() returns a new data frame with the added column.

---
title: "Modifying Data Frames in R"
output: html_notebook
---

```{r message=FALSE, warning=FALSE}
# load libraries
library(readr)
library(dplyr)
```

```{r message=FALSE}
# load data frame
dogs <- read_csv('dogs.csv')
```

```{r}
# inspect data frame
head(dogs)
```

```{r}
# add average height column

dogs <- dogs %>%
  mutate(avg_height = (height_low_inches + height_high_inches)/2)
head(dogs)
```

#------------------------adding multiple columns------------------------

#mutate() can take multiple arguments to add any number of new columns to a data frame:
#df %>%
#  mutate(profit = price - cost_to_manufacture, in_stock = TRUE)

---
title: "Modifying Data Frames in R"
output: html_notebook
---

```{r message=FALSE, warning=FALSE}
# load libraries
library(readr)
library(dplyr)
```

```{r message=FALSE}
# load data frame
dogs <- read_csv('dogs.csv')
```

```{r}
# inspect data frame
head(dogs)
```

```{r}
# add average height, average weight and rank change columns
dogs <- dogs %>%
  mutate(avg_height = (height_low_inches + height_high_inches)/2, avg_weight = (weight_low_lbs + weight_high_lbs)/2, rank_change_13_to_16 = rank_2016-rank_2013)
head(dogs)
```

#------------------------transmute columns------------------------

#transmute() returns a data frame with only the new columns.
#To add sales_tax and profit columns while dropping all other columns from the data frame:
#df %>%
#  transmute(sales_tax = price * 0.075, profit = price - cost_to_manufacture)

---
title: "Modifying Data Frames in R"
output: html_notebook
---

```{r message=FALSE, warning=FALSE}
# load libraries
library(readr)
library(dplyr)
```

```{r message=FALSE}
# load data frame
dogs <- read_csv('dogs.csv')
```

```{r}
# inspect data frame
head(dogs)
```

```{r}
# update the function call to drop all existing columns
dogs <- dogs %>%
  transmute(breed = breed, avg_height = (height_low_inches + height_high_inches)/2, avg_weight = (weight_low_lbs + weight_high_lbs)/2, rank_change_13_to_16 = rank_2016 - rank_2013)
```

#------------------------rename columns------------------------

#rename() can take any number of arguments, where each new column name is assigned to replace an old column name in the format new_column_name = old_column_name. rename() returns a new data frame with the updated column names.
#To update the name column to book_title and the written_by column to author:
#df %>%
#  rename(book_title = name, author = written_by)

---
title: "Modifying Data Frames in R"
output: html_notebook
---

```{r message=FALSE, warning=FALSE}
# load libraries
library(readr)
library(dplyr)
```

```{r message=FALSE}
# load data frame
dogs <- read_csv('dogs.csv')
```

```{r message=FALSE}
# add columns and remove existing columns
dogs <- dogs %>%
  transmute(breed = breed,
            avg_height = (height_low_inches + height_high_inches)/2,
         avg_weight = (weight_low_lbs + weight_high_lbs)/2,
        rank_change_13_to_16 = rank_2016 - rank_2013)
```

```{r}
# check column names

```

```{r}
# rename data frame columns
original_col_names <- colnames(dogs)
dogs <- dogs %>%
  rename(avg_height_inches = avg_height, avg_weight_lbs = avg_weight, popularity_change_13_to_16 = rank_change_13_to_16)
new_col_names <- colnames(dogs)
```

```{r}
# check column names
new_col_names
```

#------------------------review------------------------

---
title: "Modifying Data Frames in R"
output: html_notebook
---

```{r message=FALSE, warning=FALSE}
# load libraries
library(readr)
library(dplyr)
```

```{r message=FALSE}
# load data frame
dogs <- read_csv('dogs.csv')
```

```{r}
# inspect data frame
head(dogs)
```

```{r}
# add new columns, drop existing columns and arrange
dogs <- dogs %>%
  transmute(breed=breed, height_average_feet = (((height_low_inches + height_high_inches)/2)/12), popularity_change_15_to_16 = rank_2016 - rank_2015) %>%
  arrange(desc(popularity_change_15_to_16))

```
