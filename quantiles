#-----------------------------------quantiles----------------------------------

Quantiles are points that split a dataset into groups of equal size. For example, let’s say you just took a test and wanted to know 
whether you’re in the top 10% of the class. One way to determine this would be to split the data into ten groups with an equal number 
of datapoints in each group and see which group you fall into.

---
title: "Quantiles"
output: html_notebook
---

```{r message=FALSE, warning=FALSE}
# load libraries
library(ggplot2)
```

```{r}
# load song data
load("songs.Rda")
```

```{r message=FALSE, echo=FALSE}
# 4 quantiles
hist <- qplot(songs,
              geom="histogram",
              main = '4-Quantiles',
              xlab = 'Song Length (Seconds)',
              ylab = 'Count',
              fill=I("blue"),
              col=I("red"),
              alpha=I(.2)) +
        geom_vline(aes(xintercept=quantile(songs,0.25),
                       color=I("blue")),
                   linetype="solid",
                   size=1,
                   show.legend=T) +
				geom_vline(aes(xintercept=quantile(songs,0.5),
                       color=I("blue")),
                   linetype="solid",
                   size=1,
                   show.legend=T) +
  			geom_vline(aes(xintercept=quantile(songs,0.75),
                       color=I("blue")),
                   linetype="solid",
                   size=1,
                   show.legend=T)

hist
```

```{r message=FALSE, echo=FALSE}
# 5 quantiles
hist <- qplot(songs,
              geom="histogram",
              main = '5-Quantiles',
              xlab = 'Song Length (Seconds)',
              ylab = 'Count',
              fill=I("blue"),
              col=I("red"),
              alpha=I(.2)) +
        geom_vline(aes(xintercept=quantile(songs,0.2),
                       color=I("blue")),
                   linetype="solid",
                   size=1,
                   show.legend=T) +
				geom_vline(aes(xintercept=quantile(songs,0.4),
                       color=I("blue")),
                   linetype="solid",
                   size=1,
                   show.legend=T) +
  			geom_vline(aes(xintercept=quantile(songs,0.6),
                       color=I("blue")),
                   linetype="solid",
                   size=1,
                   show.legend=T) +
  			geom_vline(aes(xintercept=quantile(songs,0.8),
                       color=I("blue")),
                   linetype="solid",
                   size=1,
                   show.legend=T)

hist
```

```{r message=FALSE, echo=FALSE}
# 10 quantiles
hist <- qplot(songs,
              geom="histogram",
              main = '10-Quantiles',
              xlab = 'Song Length (Seconds)',
              ylab = 'Count',
              fill=I("blue"),
              col=I("red"),
              alpha=I(.2)) +
        geom_vline(aes(xintercept=quantile(songs,0.1),
                       color=I("blue")),
                   linetype="solid",
                   size=1,
                   show.legend=T) +
				geom_vline(aes(xintercept=quantile(songs,0.2),
                       color=I("blue")),
                   linetype="solid",
                   size=1,
                   show.legend=T) +
  			geom_vline(aes(xintercept=quantile(songs,0.3),
                       color=I("blue")),
                   linetype="solid",
                   size=1,
                   show.legend=T) +
  			geom_vline(aes(xintercept=quantile(songs,0.4),
                       color=I("blue")),
                   linetype="solid",
                   size=1,
                   show.legend=T) +
        geom_vline(aes(xintercept=quantile(songs,0.5),
                       color=I("blue")),
                   linetype="solid",
                   size=1,
                   show.legend=T) +
				geom_vline(aes(xintercept=quantile(songs,0.6),
                       color=I("blue")),
                   linetype="solid",
                   size=1,
                   show.legend=T) +
  			geom_vline(aes(xintercept=quantile(songs,0.7),
                       color=I("blue")),
                   linetype="solid",
                   size=1,
                   show.legend=T) +
  			geom_vline(aes(xintercept=quantile(songs,0.8),
                       color=I("blue")),
                   linetype="solid",
                   size=1,
                   show.legend=T) +
  			geom_vline(aes(xintercept=quantile(songs,0.9),
                       color=I("blue")),
                   linetype="solid",
                   size=1,
                   show.legend=T)

hist
```

#-----------------------------------quantiles in r----------------------------------

Base R has a function named quantile() that will quickly calculate the quantiles of a dataset for you.
quantile() takes two parameters. The first is the dataset that you are using. The second parameter is a single number or a vector of numbers between 0 and 1. 
These numbers represent the places in the data where you want to split.
For example, if you only wanted the value that split the first 10% of the data apart from the remaining 90%, you could use this code:

dataset <- c(5, 10, -20, 42, -9, 10)
ten_percent <- quantile(dataset, 0.10)

ten_percent now holds the value -14.5. This result technically isn’t a quantile, because it isn’t splitting the dataset into groups of equal sizes — 
this value splits the data into one group with 10% of the data and another with 90%.
However, it would still be useful if you were curious about whether a data point was in the bottom 10% of the dataset.

---
title: "Quantiles"
output: html_notebook
---

```{r}
# load song data
load("songs.Rda")
```

```{r}
# define twenty_third_percentile here:
twenty_third_percentile <- quantile(songs, 0.23)
```

```{r}
# ignore the code below here:

tryCatch(print(paste("The value that splits 23% of the data is",twenty_third_percentile)), error=function(e) {print("You haven't defined twenty_third_percentile.")})
```

#-----------------------------------many quantiles----------------------------------

quantiles are usually a set of values that split the data into groups of equal size. 
For example, you wanted to get the 5-quantiles, or the four values that split the data into five groups of equal size, you could use this code:

dataset <- c(5, 10, -20, 42, -9, 10)
ten_percent <- quantile(dataset, c(0.2, 0.4, 0.6, 0.8))

Note that we had to do a little math in our head to make sure that the values c(0.2, 0.4, 0.6, 0.8) split the data into groups of equal size. 
Each group has 20% of the data.

---
title: "Quantiles"
output: html_notebook
---

```{r}
# load song data
load("songs.Rda")
```

```{r}
# define quartiles and deciles here:
quartiles <- quantile(songs, c(0.25, 0.5, 0.75))
deciles <- quantile(songs, c(0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9))
```

```{r}
# define tenth here:
tenth <- 3
```

```{r}
# ignore the code below here:

tryCatch(print(paste(c("The quartiles are",quartiles,collapse=" "))), error=function(e) {print("You haven't defined quartiles.")})

tryCatch(print(paste(c("The deciles are",deciles,collapse=" "))), error=function(e) {print("You haven't defined deciles.")})
```

#-----------------------------------common quantiles----------------------------------

One of the most common quantiles is the 2-quantile. This value splits the data into two groups of equal size. 
Half the data will be above this value, and half the data will be below it. This is also known as the median!

Ten points are below the median and ten points are above the median.
The 4-quantiles, or the quartiles, split the data into four groups of equal size.

Quartiles split a dataset of 20 points into 4 groups with 5 points each
Finally, the percentiles, or the values that split the data into 100 groups, are commonly used to compare new data points to the dataset.
You might hear statements like “You are above the 80th percentile in height”. 
This means that your height is above whatever value splits the first 80% of the data from the remaining 20%.

---
title: "Quantiles"
output: html_notebook
---

```{r}
# load song data
load("songs.Rda")
```

```{r}
# define percentile and answer here:
percentile <- quantile(songs, 0.32)
answer <- "below"
```

```{r}
# ignore the code below here:

tryCatch(print(paste("Your percentile is",percentile)), error=function(e) {print("You haven't defined percentile")})
```

#-----------------------------------quantiles review----------------------------------

---
title: "Quantiles"
output: html_notebook
---

```{r message=FALSE, warning=FALSE}
# load libraries
library(ggplot2)
```

```{r}
# load school data
load("school_one.Rda")
load("school_two.Rda")
load("school_three.Rda")
```

```{r message=FALSE, echo=FALSE}
# plot histogram and deciles for school one
hist <- qplot(school_one,
              geom="histogram",
              main = 'School One',
              xlab = 'SAT Score',
              ylab = 'Count',
              fill=I("blue"),
              col=I("red"),
              alpha=I(.2)) +
        geom_vline(aes(xintercept=quantile(school_one,0.1),
                       color=I("blue")),
                   linetype="solid",
                   size=1,
                   show.legend=T) +
				geom_vline(aes(xintercept=quantile(school_one,0.2),
                       color=I("blue")),
                   linetype="solid",
                   size=1,
                   show.legend=T) +
  			geom_vline(aes(xintercept=quantile(school_one,0.3),
                       color=I("blue")),
                   linetype="solid",
                   size=1,
                   show.legend=T) +
  			geom_vline(aes(xintercept=quantile(school_one,0.4),
                       color=I("blue")),
                   linetype="solid",
                   size=1,
                   show.legend=T) +
        geom_vline(aes(xintercept=quantile(school_one,0.5),
                       color=I("blue")),
                   linetype="solid",
                   size=1,
                   show.legend=T) +
				geom_vline(aes(xintercept=quantile(school_one,0.6),
                       color=I("blue")),
                   linetype="solid",
                   size=1,
                   show.legend=T) +
  			geom_vline(aes(xintercept=quantile(school_one,0.7),
                       color=I("blue")),
                   linetype="solid",
                   size=1,
                   show.legend=T) +
  			geom_vline(aes(xintercept=quantile(school_one,0.8),
                       color=I("blue")),
                   linetype="solid",
                   size=1,
                   show.legend=T) +
  			geom_vline(aes(xintercept=quantile(school_one,0.9),
                       color=I("blue")),
                   linetype="solid",
                   size=1,
                   show.legend=T)

hist
```

```{r message=FALSE, echo=FALSE}
# plot histogram and deciles for school two
hist <- qplot(school_two,
              geom="histogram",
              main = 'School Two',
              xlab = 'SAT Score',
              ylab = 'Count',
              fill=I("blue"),
              col=I("red"),
              alpha=I(.2)) +
        geom_vline(aes(xintercept=quantile(school_two,0.1),
                       color=I("blue")),
                   linetype="solid",
                   size=1,
                   show.legend=T) +
				geom_vline(aes(xintercept=quantile(school_two,0.2),
                       color=I("blue")),
                   linetype="solid",
                   size=1,
                   show.legend=T) +
  			geom_vline(aes(xintercept=quantile(school_two,0.3),
                       color=I("blue")),
                   linetype="solid",
                   size=1,
                   show.legend=T) +
  			geom_vline(aes(xintercept=quantile(school_two,0.4),
                       color=I("blue")),
                   linetype="solid",
                   size=1,
                   show.legend=T) +
        geom_vline(aes(xintercept=quantile(school_two,0.5),
                       color=I("blue")),
                   linetype="solid",
                   size=1,
                   show.legend=T) +
				geom_vline(aes(xintercept=quantile(school_two,0.6),
                       color=I("blue")),
                   linetype="solid",
                   size=1,
                   show.legend=T) +
  			geom_vline(aes(xintercept=quantile(school_two,0.7),
                       color=I("blue")),
                   linetype="solid",
                   size=1,
                   show.legend=T) +
  			geom_vline(aes(xintercept=quantile(school_two,0.8),
                       color=I("blue")),
                   linetype="solid",
                   size=1,
                   show.legend=T) +
  			geom_vline(aes(xintercept=quantile(school_two,0.9),
                       color=I("blue")),
                   linetype="solid",
                   size=1,
                   show.legend=T)

hist
```

```{r message=FALSE, echo=FALSE}
# plot histogram and deciles for school three
hist <- qplot(school_three,
              geom="histogram",
              main = 'School Three',
              xlab = 'SAT Score',
              ylab = 'Count',
              fill=I("blue"),
              col=I("red"),
              alpha=I(.2)) +
        geom_vline(aes(xintercept=quantile(school_three,0.1),
                       color=I("blue")),
                   linetype="solid",
                   size=1,
                   show.legend=T) +
				geom_vline(aes(xintercept=quantile(school_three,0.2),
                       color=I("blue")),
                   linetype="solid",
                   size=1,
                   show.legend=T) +
  			geom_vline(aes(xintercept=quantile(school_three,0.3),
                       color=I("blue")),
                   linetype="solid",
                   size=1,
                   show.legend=T) +
  			geom_vline(aes(xintercept=quantile(school_three,0.4),
                       color=I("blue")),
                   linetype="solid",
                   size=1,
                   show.legend=T) +
        geom_vline(aes(xintercept=quantile(school_three,0.5),
                       color=I("blue")),
                   linetype="solid",
                   size=1,
                   show.legend=T) +
				geom_vline(aes(xintercept=quantile(school_three,0.6),
                       color=I("blue")),
                   linetype="solid",
                   size=1,
                   show.legend=T) +
  			geom_vline(aes(xintercept=quantile(school_three,0.7),
                       color=I("blue")),
                   linetype="solid",
                   size=1,
                   show.legend=T) +
  			geom_vline(aes(xintercept=quantile(school_three,0.8),
                       color=I("blue")),
                   linetype="solid",
                   size=1,
                   show.legend=T) +
  			geom_vline(aes(xintercept=quantile(school_three,0.9),
                       color=I("blue")),
                   linetype="solid",
                   size=1,
                   show.legend=T)

hist
```
